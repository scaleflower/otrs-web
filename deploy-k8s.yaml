apiVersion: apps/v1
kind: Deployment
metadata:
  name: otrs-web-app
  namespace: default
  labels:
    app: otrs-web
    version: "{{IMAGE_TAG}}"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: otrs-web
  template:
    metadata:
      labels:
        app: otrs-web
    spec:
      containers:
      - name: otrs-web-app
        image: "{{IMAGE_URL}}"
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_ENV
          value: "production"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads-volume
          mountPath: /app/uploads
        - name: logs-volume
          mountPath: /app/logs
        - name: database-backups-volume
          mountPath: /app/database_backups
      volumes:
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: otrs-uploads-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: otrs-logs-pvc
      - name: database-backups-volume
        persistentVolumeClaim:
          claimName: otrs-backups-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: otrs-web-service
  namespace: default
spec:
  selector:
    app: otrs-web
  ports:
  - port: 80
    targetPort: 5000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: otrs-web-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: "{{DOMAIN_NAME}}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: otrs-web-service
            port:
              number: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: otrs-uploads-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: otrs-logs-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: otrs-backups-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
